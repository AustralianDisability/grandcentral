<?php

include_once dirname(__FILE__) . '/mn_widgets.features.inc';

/**
 * Implements hook_views_query_alter().
 *
 * Sets a context with the display plugin is 'web_widgets.'
 */
function mn_widgets_views_query_alter($view) {
  if (module_exists('context')) {
    if ($view->display_handler->display->display_plugin == 'web_widgets') {
      context_set('mn_widgets', 'widget_active', TRUE);
    }
  }
}

/**
 * Implements hook_block_info().
 */
function mn_widgets_block_info() {
  $blocks = array();
  $blocks['embed']['info'] = t('MN: Embed widget');
  return $blocks;
}

/**
 * Implements hook_block_view().
 */
function mn_widgets_block_view($delta) {
  drupal_add_css(drupal_get_path('module', 'mn_widgets') . '/mn_widgets.css');
  switch ($delta) {
    case 'embed':
      // Prepare embed code
      $display_mode = '';
      $height = 300;
      if (isset($_GET['display']) && $_GET['display'] == 'views-mode-map') {
        $display_mode = "map/";
        $height = 225;
      }

      $style = 'iframe';
      $query = $_GET;
      unset($query['q']);
      unset($query['display']);

      $path_q = $_GET['q'];
      $path_q = str_replace('node', 'channel', $path_q);

      $path = url('widget/' . $display_mode . $path_q, array('absolute' => TRUE, 'query' => $query, 'purl' => array('disabled' => TRUE)));
      $width = 300;
      $output = web_widgets_render_embed_code($style, $path, $width, $height);
      $output .= '<div id="mn_widgets_preview"></div>';

      // Prepare widget preview
      $query['preview'] = 1;
      $preview_path = url('widget/' . $display_mode . $path_q, array('absolute' => TRUE, 'query' => $query, 'purl' => array('disabled' => TRUE)));

      $widget_preview['mn_widgets_preview'] = theme('web_widgets_' . $style, array($preview_path, $width, $height));
      drupal_add_js($widget_preview, array('type' => 'setting', 'scope' => JS_DEFAULT));

      return array('subject' => t('Embed'), 'content' => $output);
  }
}

/**
 * Implements hook_block().
 */
function mn_widgets_block_OLD($op = 'list', $delta = 0) { }

/**
 * Implements hook_web_widgets_render_widget().
 *
 * Adds relevent stylesheets.
 */
function mn_widgets_web_widgets_render_widget() {
  drupal_add_css(drupal_get_path('module', 'mn_widgets') . '/mn_widgets.css', array('type' => 'widget'));
}

/**
 * Implements hook_openlayers_alter().
 *
 * Set the width of the map to 300 when the mn_widgets context is active.
 */
function mn_widgets_openlayers_alter(&$map) {
  if (module_exists('context')) {
    // Set width to 300 if previewing
    if (context_get('mn_widgets', 'widget_active')) {
      if ($_GET['preview']) {
        $map['width'] = 300;
      }
      else {
        $map['height'] = 'auto';
      }
    }
  }
}

/**
 * Implements hook_theme_registry_alter().
 */
function mn_widgets_theme_registry_alter(&$theme_registry) {
  $path = drupal_get_path("module", "mn_widgets") . '/theme';

  $theme_registry['web_widgets_iframe']['path'] = $path;
  $theme_registry['web_widgets_iframe']['preprocess functions'][] = 'template_preprocess_mn_widgets_web_widgets_iframe';
}

/**
 * Preprocessor for theme('web_widgets_iframe').
 */
function template_preprocess_mn_widgets_web_widgets_iframe(&$vars) {
  $vars['site_link'] = t('More news from <a href="@site_url">@site_name</a>.', array(
    '@site_url' => url('', array('absolute' => TRUE, 'purl' => array('disabled' => TRUE))),
    '@site_name' => variable_get('site_name', 'Drupal'),
  ));
  $vars['site_name'] = t('from @site_name', array('@site_name' => variable_get('site_name', 'Drupal')));
  $vars['title'] = l(drupal_get_title(), $_GET['q'], array('absolute' => TRUE, 'attributes' => array('style' => 'color:#fff;text-decoration:none;')));
}
